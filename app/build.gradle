apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'
apply from: "$rootDir/dependencies.gradle"

ext {
    applicationIdSuffix = ""
}

android {
    compileSdkVersion versions.targetsdk
    defaultConfig {
        applicationId "io.golos.cyber_android"
        minSdkVersion versions.minsdk
        targetSdkVersion versions.targetsdk
        versionCode appVesrionCode
        versionName appVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        buildConfigField "String", "AUTH_TEST_PASS", properties.getProperty('authtestpass')

        manifestPlaceholders = [crashlyticsEnabled: "false"]
        signingConfig signingConfigs.debug

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [crashlyticsEnabled: "true"]
        }
    }

    flavorDimensions "cyber4j-config-type"
    productFlavors {
        prod {
            dimension "cyber4j-config-type"
            resValue "string", "app_name", "Commun-prod"
            buildConfigField "String", 'BASE_URL', "\"https://commun.com\""
        }
        stable {
            dimension "cyber4j-config-type"
            resValue "string", "app_name", "Commun"
            applicationIdSuffix ".stable"
            buildConfigField "String", 'BASE_URL', "\"https://commun.com\""
        }
        dev {
            dimension "cyber4j-config-type"
            resValue "string", "app_name", "Commun-dev"
            applicationIdSuffix ".dev"
            buildConfigField "String", 'BASE_URL', "\"https://commun.com\""
        }
        unstable {
            dimension "cyber4j-config-type"
            resValue "string", "app_name", "Commun-unstable"
            applicationIdSuffix ".unstable"
            buildConfigField "String", 'BASE_URL', "\"https://commun.com\""
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    dataBinding {
        enabled = true
    }

    configurations {
        all*.exclude group: 'com.google.guava', module: 'listenablefuture'
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
        exclude 'lib/x86_64/darwin/libscrypt.dylib'
        exclude 'lib/x86_64/freebsd/libscrypt.so'
        exclude 'lib/x86_64/linux/libscrypt.so'
        exclude 'org/bitcoinj/crypto/cacerts'
        exclude 'META-INF/rxjava.properties'
        exclude 'about_files/LICENSE-2.0.txt'
        exclude 'META-INF/eclipse.inf'
        exclude 'plugin.xml'
        exclude 'plugin.properties'
    }
}

buildscript {
    repositories {
        mavenCentral()
    }
}

dependencies {
    /* Our libraries */
    implementation("io.golos.commun4j:commun4j:$versions.commun4jVersion")

    /*Modules*/
    implementation project(':domain')
    implementation project(':data')
    implementation project(':posts_editor')
    implementation project(':utils')

    deps.groups.kotlin dependencies
    deps.groups.ui dependencies
    deps.groups.tests dependencies
    deps.groups.serializers dependencies
    deps.groups.android dependencies
    deps.groups.navigation dependencies
    deps.groups.architectureComponents dependencies
    deps.groups.injection dependencies
    deps.groups.firebase dependencies

    implementation deps.utils.timber
    implementation deps.utils.fabric
    implementation deps.utils.protobuf
    implementation deps.googleServices.playServicesVision
}
