apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion targetsdk
    defaultConfig {
        minSdkVersion minsdk
        targetSdkVersion targetsdk
        versionCode appVesrionCode
        versionName appVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        buildConfigField "String", "AUTH_TEST_PASS", properties.getProperty('authtestpass')

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "cyber4j-config-type"

    productFlavors {
        stable {
            dimension "cyber4j-config-type"
            resValue "string", "app_name", "Commun"
        }
        dev {
            dimension "cyber4j-config-type"
            resValue "string", "app_name", "Commun-dev"
            applicationIdSuffix ".dev"
        }
        unstable {
            dimension "cyber4j-config-type"
            resValue "string", "app_name", "Commun-unstable"
            applicationIdSuffix ".unstable"
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    configurations {
        all*.exclude group: 'com.google.guava', module: 'listenablefuture'
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
        exclude 'lib/x86_64/darwin/libscrypt.dylib'
        exclude 'lib/x86_64/freebsd/libscrypt.so'
        exclude 'lib/x86_64/linux/libscrypt.so'
        exclude 'org/bitcoinj/crypto/cacerts'
        exclude 'META-INF/rxjava.properties'
        exclude 'about_files/LICENSE-2.0.txt'
        exclude 'META-INF/eclipse.inf'
        exclude 'plugin.xml'
        exclude 'plugin.properties'
    }
}

buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath "io.fabric.tools:gradle:$fabricToolsVersion"
    }
}

dependencies {
    implementation("io.golos.cyber4j:cyber4j:$cyber4jVersion")

    implementation project(':domain')
    implementation project(':data')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$androidXAppcompatVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navVersion"
    implementation "androidx.viewpager2:viewpager2:$viewPager2Version"
    implementation "androidx.paging:paging-runtime:$pagingVersion"
    implementation("com.crashlytics.sdk.android:crashlytics:$fabricVersion@aar") {
        transitive = true
    }
    implementation("com.squareup.moshi:moshi:$moshiVersin")
    implementation "com.github.delight-im:Android-AdvancedWebView:$advancedWebViewVersion"
    implementation "ru.tinkoff.decoro:decoro:$decoroVersion"
    implementation "com.github.hedzr:android-file-chooser:$dirchooserVersion"
    implementation "com.google.firebase:firebase-core:$firebaseCoreVersion"
    implementation "com.google.firebase:firebase-messaging:$fcmVersion"

    implementation "com.google.android.gms:play-services-vision:$visionVersion"

    implementation "androidx.legacy:legacy-support-v4:$legacyVersion"
    implementation 'androidx.appcompat:appcompat:1.1.0-beta01'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0'
    testImplementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    testImplementation "androidx.arch.core:core-testing:$archCoreTesting"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation("com.squareup.moshi:moshi:$moshiVersin")

    testImplementation project(':domain')
    testImplementation "io.golos.cyber4j:cyber4j:$cyber4jVersion"
    testImplementation project(':data')
}
