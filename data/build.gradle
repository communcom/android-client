apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion targetsdk
    defaultConfig {
        minSdkVersion minsdk
        targetSdkVersion targetsdk
        versionCode appVesrionCode
        versionName appVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility 1.7
        sourceCompatibility 1.7
    }
}

dependencies {
    implementation project(':domain')
    implementation project(':shared_core')

    implementation("io.golos.commun4j:commun4j:$commun4jVersion")

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    /* Dagger */
    implementation "com.google.dagger:dagger:$dagger_version"

    testImplementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    testImplementation "androidx.arch.core:core-testing:$archCoreTesting"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}